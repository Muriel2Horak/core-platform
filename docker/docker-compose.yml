services:
  db:
    image: postgres:16
    container_name: core-db
    environment:
      POSTGRES_USER: core
      POSTGRES_PASSWORD: core
      POSTGRES_DB: core
    volumes:
      - core_db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - core-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: core-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@local.dev
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - core-net

  backend:
    build:
      context: ../backend
      dockerfile: ../docker/backend/Dockerfile
    container_name: core-backend
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
      keycloak:
        condition: service_started
      loki:
        condition: service_started
    # 🔐 SECURITY: Load environment variables from .env file
    env_file:
      - .env
    environment:
      - OIDC_ISSUER=${OIDC_ISSUER}
      - OIDC_API_AUDIENCE=${OIDC_API_AUDIENCE}
      - CORS_ORIGINS=${CORS_ORIGINS}
      # 🔐 SECURE: Keycloak Admin Service credentials from .env
      - KEYCLOAK_ADMIN_BASE_URL=${KEYCLOAK_ADMIN_BASE_URL}
      - KEYCLOAK_ADMIN_REALM=${KEYCLOAK_ADMIN_REALM}
      - KEYCLOAK_ADMIN_CLIENT_ID=${KEYCLOAK_ADMIN_CLIENT_ID}
      - KEYCLOAK_ADMIN_CLIENT_SECRET=${KEYCLOAK_ADMIN_CLIENT_SECRET}
      - KEYCLOAK_TARGET_REALM=${KEYCLOAK_TARGET_REALM}
      # Application security
      - APP_SECRET_KEY=${APP_SECRET_KEY}
      - JWT_SIGNING_KEY=${JWT_SIGNING_KEY}
      # 🔧 BETTER: Logging configuration přes environment variables
      - LOKI_URL=http://loki:3100/loki/api/v1/push
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOGGING_LEVEL_ROOT=INFO
      - LOGGING_LEVEL_CZ_MURIEL_CORE=DEBUG
      - SPRING_PROFILES_ACTIVE=development
      - ENVIRONMENT=${ENVIRONMENT:-development}
      # Audit logging
      - AUDIT_LOG_LEVEL=${AUDIT_LOG_LEVEL:-INFO}
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-external-labels: "service=backend,environment=development"
        loki-pipeline-stages: |
          - docker: {}
    networks:
      - core-net

  frontend:
    build:
      context: ../frontend
      dockerfile: ../docker/frontend/Dockerfile
      target: dev
    container_name: core-frontend
    ports:
      - "3000:3000"
    environment:
      - HOST=0.0.0.0
      - VITE_API_TARGET=http://backend:8080
      - VITE_LOKI_TARGET=http://loki:3100
    volumes:
      - ../frontend:/app
      - ../frontend/node_modules:/app/node_modules
    command: ["sh", "-c", "npm install && npm run dev -- --port 3000 --host 0.0.0.0"]
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:3000/ >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      backend:
        condition: service_started
      loki:
        condition: service_started
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-external-labels: "service=frontend,environment=development"
        loki-pipeline-stages: |
          - docker: {}
    networks:
      - core-net

  grafana:
    image: grafana/grafana:10.4.0
    container_name: core-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    networks:
      - core-net

  loki:
    image: grafana/loki:3.0.0
    container_name: core-loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/config.yml
    volumes:
      - ./loki/config.yml:/etc/loki/config.yml
      - loki_data:/loki
    networks:
      - core-net

  promtail:
    image: grafana/promtail:3.0.0
    container_name: core-promtail
    command: -config.file=/etc/promtail/config.yml
    ports:
      - "9080:9080"
    volumes:
      - ./promtail/config.yml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - promtail_positions:/tmp
    depends_on:
      - loki
    networks:
      - core-net
    user: "0:0"

  prometheus:
    image: prom/prometheus:v2.54.0
    container_name: core-prometheus
    ports:
      - "9091:9090"  # Změna z 9090:9090 na 9091:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - loki
      - promtail
    networks:
      - core-net

  node-exporter:
    image: prom/node-exporter:v1.8.1
    container_name: core-node-exporter
    ports:
      - "9100:9100"
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    networks:
      - core-net
    profiles:
      - vm

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: core-cadvisor
    ports:
      - "8082:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - core-net
    privileged: true

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.15.0
    container_name: core-postgres-exporter
    ports:
      - "9187:9187"
    environment:
      - DATA_SOURCE_NAME=postgresql://core:core@db:5432/core?sslmode=disable
    depends_on:
      - db
    networks:
      - core-net

  keycloak:
    image: quay.io/keycloak/keycloak:26.2.0
    container_name: keycloak
    depends_on:
      db:
        condition: service_healthy
    command: ["start-dev", "--import-realm", "--import-strategy=OVERWRITE"]
    environment:
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD:-admin}
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/core
      KC_DB_USERNAME: core
      KC_DB_PASSWORD: core
      KC_HEALTH_ENABLED: "true"
      # 🔧 FIX: Nový formát pro Keycloak 26.2.0 (bez deprecated v1 options)
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: "false"
      KC_HTTP_ENABLED: "true"
      KC_HOSTNAME_STRICT_HTTPS: "false"
      # Odstraněno deprecated: KC_HOSTNAME_PORT, KC_HOSTNAME_ADMIN, KC_HOSTNAME_ADMIN_URL
    ports:
      - "8081:8080"
      - "9000:9000"
      - "8443:8443"
    volumes:
      - ./keycloak:/opt/keycloak/data/import:ro
    networks:
      - core-net
    restart: unless-stopped

volumes:
  core_db_data:
  grafana_data:
  loki_data:
  promtail_positions:

networks:
  core-net:
    driver: bridge